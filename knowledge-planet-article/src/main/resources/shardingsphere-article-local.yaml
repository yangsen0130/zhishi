# Define the actual database sources
dataSources:
  article-db-0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3306/article_db_0?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: root # Replace with your password
  article-db-1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3306/article_db_1?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: root # Replace with your password

# Define the sharding rules
rules:
  - !SHARDING
    tables:
      # Sharding rule for the 'article' table
      article:
        actualDataNodes: article-db-${0..1}.article_${0..3}
        databaseStrategy:
          standard:
            shardingColumn: id # Shard database based on article ID
            shardingAlgorithmName: article-db-inline # Uses 'id'
        tableStrategy:
          standard:
            shardingColumn: id # Shard table based on article ID
            shardingAlgorithmName: article-table-inline

      # Sharding rule for 'user_article_permission' table
      user_article_permission:
        actualDataNodes: article-db-${0..1}.user_article_permission_${0..3} # Same topology as article
        databaseStrategy:
          standard:
            shardingColumn: article_id # Shard database based on article ID
            shardingAlgorithmName: permission-db-inline # *** MODIFIED: Use new specific DB algorithm ***
        tableStrategy:
          standard:
            shardingColumn: article_id # Shard table based on article ID
            shardingAlgorithmName: permission-table-inline # Use a specific table algorithm name
        # No keyGenerateStrategy needed (PK 'id' is AUTO_INCREMENT)

    # Define Sharding Algorithms
    shardingAlgorithms:
      # Database sharding algorithm (mod 2) - Used by 'article' table
      article-db-inline:
        type: INLINE
        props:
          algorithm-expression: article-db-${id % 2} # Correct for 'article' table which uses 'id'

      # *** ADDED: Database sharding algorithm for 'user_article_permission' (mod 2) ***
      permission-db-inline: # New algorithm for permission table's database sharding
        type: INLINE
        props:
          # Use 'article_id' which is the shardingColumn for this table's DB strategy
          algorithm-expression: article-db-${article_id % 2}

      # Table sharding algorithm for 'article' (mod 4)
      article-table-inline:
        type: INLINE
        props:
          algorithm-expression: article_${id % 4}

      # Table sharding algorithm for 'user_article_permission' (mod 4)
      permission-table-inline:
        type: INLINE
        props:
          # Use 'article_id' which is the shardingColumn for this table strategy
          algorithm-expression: user_article_permission_${article_id % 4}

# Define global properties
props:
  sql-show: true # Log executed SQL statements