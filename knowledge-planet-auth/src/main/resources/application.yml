
# src/main/resources/application.yml
server:
  port: 9101
  tomcat:
    threads:
      max: 1000
spring:
  profiles:
    active: local
  redis:
    host: 127.0.0.1
    port: 6379
  application:
    name: knowledge-planet-auth
  config:
    import: nacos:application.yaml
  cloud:
    nacos:
      config:
        server-addr: 127.0.0.1:8848
      discovery:
        server-addr: 127.0.0.1:8848
#  shardingsphere:
#    datasource:
#      names: user-db-0,user-db-1
#      user-db-0:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/user_db_0?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
#        username: root
#        password: root
#      user-db-1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/user_db_1?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
#        username: root
#        password: root
#    rules:
#      sharding:
#        tables:
#          user:
#            actual-data-nodes: user-db-${0..1}.user_${0..3}
#            database-strategy:
#              standard:
#                sharding-column: id
#                sharding-algorithm-name: user-db-inline
#            table-strategy:
#              standard:
#                sharding-column: id
#                sharding-algorithm-name: user-table-inline
#            key-generate-strategy:
#              column: id
#              key-generator-name: snowflake
#        sharding-algorithms:
#          user-db-inline:
#            type: INLINE
#            props:
#              algorithm-expression: user-db-${id % 2}
#          user-table-inline:
#            type: INLINE
#            props:
#              algorithm-expression: user_${id % 4}
#        key-generators:
#          snowflake:
#            type: SNOWFLAKE
#            props:
#              worker-id: 123
#    props:
#      sql-show: true
  datasource:
      driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
      url: jdbc:shardingsphere:classpath:shardingsphere-auth-${spring.profiles.active}.yaml


  # Swagger配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.example.auth.controller

mybatis-plus:
  mapper-locations: classpath:mapper/**/*.xml
  type-aliases-package: com.example.common.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: none
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0